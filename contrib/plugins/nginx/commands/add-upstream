#!/bin/bash
SERVICE_NAME="$1"
APP_NAME="$2"

if [ -z "$SERVICE_NAME" ] || [ -z "$APP_NAME" ]; then
    echo "Usage: gokku nginx:add-upstream <service> <app>"
    echo ""
    echo "Examples:"
    echo "  gokku nginx:add-upstream nginx-lb api"
    echo "  gokku nginx:add-upstream nginx-lb web"
    exit 1
fi

echo "-----> Adding upstream for app '$APP_NAME'"

# Get app domain
APP_DIR="/opt/gokku/apps/$APP_NAME"
CNAME_FILE="$APP_DIR/CNAME"

if [ -f "$CNAME_FILE" ]; then
    DOMAIN=$(cat "$CNAME_FILE" | tr -d '\n')
    echo "-----> Using domain: $DOMAIN"
else
    DOMAIN="${APP_NAME}.local"
    echo "-----> No CNAME found, using default domain: $DOMAIN"
fi

# Get app base port
APP_ENV_FILE="$APP_DIR/.env"
if [ -f "$APP_ENV_FILE" ]; then
    BASE_PORT=$(grep "^PORT=" "$APP_ENV_FILE" | cut -d= -f2 | head -1)
    if [ -z "$BASE_PORT" ]; then
        BASE_PORT=8080
    fi
else
    BASE_PORT=8080
fi

# Create upstream configuration
UPSTREAM_NAME="$APP_NAME"
CONFIG_FILE="/opt/gokku/services/$SERVICE_NAME/conf.d/${UPSTREAM_NAME}.conf"

cat > "$CONFIG_FILE" << EOF
upstream $UPSTREAM_NAME {
    server 127.0.0.1:$BASE_PORT;
}

server {
    listen 80;
    server_name $DOMAIN;

    location / {
        proxy_pass http://$UPSTREAM_NAME;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

echo "-----> Upstream configuration created: $CONFIG_FILE"

# Reload nginx if container is running
if container_is_running "$SERVICE_NAME"; then
    echo "-----> Reloading nginx configuration"
    docker exec "$SERVICE_NAME" nginx -s reload
    echo "-----> Nginx configuration reloaded"
else
    echo "-----> Nginx container not running, configuration will be loaded on next start"
fi

echo "-----> Upstream '$UPSTREAM_NAME' added for domain '$DOMAIN'"

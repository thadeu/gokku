#!/bin/bash
SERVICE_NAME="$1"
JOB_NAME="$2"

echo "Logs for job '$JOB_NAME' in $SERVICE_NAME:"
echo "=========================================="

# Source helper functions
source /opt/gokku/scripts/plugin-helpers.sh

# Check if container exists
if ! container_exists "$SERVICE_NAME"; then
    echo "Service '$SERVICE_NAME' not found"
    exit 1
fi

# Validate parameters
if [ -z "$JOB_NAME" ]; then
    echo "Usage: gokku cron:logs-job <service> <job-name>"
    echo "Example: gokku cron:logs-job cron-scheduler backup-redis"
    exit 1
fi

# Get service directories
LOGS_DIR=$(get_service_config "$SERVICE_NAME" | grep -o '"logs_dir":"[^"]*"' | cut -d'"' -f4)

if [ ! -d "$LOGS_DIR" ]; then
    echo "Logs directory not found"
    exit 1
fi

# Find log files for this job
LOG_FILES=$(find "$LOGS_DIR" -name "${JOB_NAME}_*.log" | sort -r)

if [ -z "$LOG_FILES" ]; then
    echo "No logs found for job '$JOB_NAME'"
    exit 0
fi

echo "Recent executions for job '$JOB_NAME':"
echo "-------------------------------------"

# Show last 5 executions
LOG_COUNT=0
for log_file in $LOG_FILES; do
    if [ -f "$log_file" ]; then
        LOG_COUNT=$((LOG_COUNT + 1))
        if [ $LOG_COUNT -gt 5 ]; then
            break
        fi

        EXECUTION_TIME=$(basename "$log_file" .log | sed 's/.*_\([0-9]*_[0-9]*\)$/\1/' | tr '_' ' ')
        EXIT_CODE=$(tail -1 "$log_file" | grep -o "Exit code: [0-9]*" | cut -d' ' -f3 || echo "unknown")

        echo ""
        echo "Execution: $EXECUTION_TIME (Exit code: $EXIT_CODE)"
        echo "----------------------------------------"

        # Show last 20 lines of the log
        tail -20 "$log_file"
    fi
done

echo ""
echo "Use 'gokku cron:run $SERVICE_NAME $JOB_NAME' to run the job manually"
